------------OOPs-----------
**OOPS:(Object Oriented Programming System) oops is methodology to design a program using classes and objects.
      =>it simplifies software development and maintenance by providing some concepts:
         1.object
         2.class
         3.inheritance
         4.polymorphism
         5.abstraction
         6.encapsulation
1.Object:
    =>Any entity that has state and behavior is known as an object. 
      For example, a chair, pen, table, keyboard, bike, etc. It can be physical or logical.
      An Object can be defined as an instance of a class.
2.class:
    =>A class is a collection of objects. It is a logical entity.
    => A class can also be defined as a blueprint from which you can create an individual object.
    => A class contains fields and methods to describe the behavior of an object and to manipulate data.
    Example: 
        class Rectangle {
            constructor(height, width) {
            this.height = height;
            this.width = width;
            }
        }
        let obj = new Rectangle(10, 20);
        console.log(obj.height);
        console.log(obj.width);
3.Inheritance:
    =>Inheritance is a mechanism in which one object acquires all the properties and behaviors of its parent object.
    It is an important part of OOPs (Object Oriented programming system).
4.Polymorphism:
    =>polymorphism means one task can be performed in different ways.
    =>In other words, polymorphism means the ability to take more than one form.
    =>poly means many and morphs means forms.
    Example:
        class A {  
            display(){  
                document.writeln("A is invoked");  
            }  
        }  
        class B extends A  {  
        }  
        var b=new B();  
        b.display();  
5.Abstraction:
    =>Abstraction is used to hide the internal details and showing only the functionality to the users.
    =>In other words, the process of identifying only the required characteristics of an object and ignoring the irrelevant details is known as abstraction.
    =>It reduces the complexity of the system and isolates the impact of changes.
6.Encapsulation:
    =>Encapsulation is defined as the wrapping up of data under a single unit.
    
            